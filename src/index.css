@import url("https://fonts.googleapis.com/css2?family=Kumbh+Sans:wght@100..900&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: "Kumbh Sans", sans-serif;
}
/* set corved in calculator  */
.path {
  clip-path: polygon(0 0, 79% 0, 100% 68%, 0 64%);
}

/* Hide the default radio button */
.custom-radio input[type="radio"] {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 10px;
  height: 10px;
  border: 1px solid #333;
  border-radius: 50%;
  position: relative;
}

.custom-radio input[type="radio"]::before {
  content: "";
  width: 10px;
  height: 10px;
  background-color: #222222b0; /* Change this color */
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Style the selected radio button */
.custom-radio input[type="radio"]:checked::before {
  content: "";
  width: 10px;
  height: 10px;
  background-color: #fb5b21; /* Change this color */
  color: #fb5b21;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Style the search input field */
input[type="search"] {
  width: 560px;
  padding: 10px;
  font-size: 16px;
  background-color: transparent; /* Input background color */
  color: white; /* Text color */
}

/* Style the clear (X) button */
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
  height: 20px;
  width: 40px; /* Background color of the clear button */
  mask-size: cover;
  color: white;
}

/* Style the suggestions dropdown (WebKit browsers only) */
input[type="search"]::-webkit-search-results-decoration {
  background-color: transparent; /* Background color of dropdown */
  color: white; /* Text color of dropdown */
}
input[type="search"]::placeholder {
  color: white;
}

input[type="range"] {
  -webkit-appearance: none; /* Remove default styling in WebKit browsers */
  appearance: none; /* Remove default styling in modern browsers */
  width: 100%; /* Adjust width */
  height: 10px; /* Adjust height of the track */
  background: #ccc; /* Track color */
  border-radius: 4px; /* Round corners */
  outline: none; /* Remove outline */
  color: white;
}

/* Thumb (handle) styling */
input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none; /* Remove default thumb styling */
  appearance: none;
  width: 16px; /* Thumb width */
  height: 16px; /* Thumb height */
  background: white; /* Thumb color */
  border-radius: 100%; /* Make thumb circular */
  cursor: pointer; /* Change cursor to pointer */
  color: #4a9500;
}
input[type="range"]::-moz-range-thumb {
  width: 40px;
  height: 40px;
  background: white;
  border-radius: 50%;
  cursor: pointer;
  color: white;
}
input[type="range"]::-ms-thumb {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  cursor: pointer;
  color: transparent;
}

.navbarb {
  background: rgba(255, 255, 255, 0.16);
  backdrop-filter: blur(6px);
}
.secbg {
  background: rgba(255, 255, 255, 0.16);
  backdrop-filter: blur(4px);
}

.range1 {
  height: 1.5rem /* 24px */;
  width: 100%;
  cursor: pointer;
  appearance: none;
  -webkit-appearance: none;
  --range-shdw: var(--fallback-bc, oklch(var(--bc) / 1));
  overflow: hidden;
  border-radius: var(--rounded-box, 1rem 16px);
}

.range1::-webkit-slider-runnable-track {
  height: 0.5rem /* 8px */;
  width: 100%;
  border-radius: var(--rounded-box, 1rem /* 16px */);
  background-color: var(--fallback-bc, oklch(var(--bc) / 0.1));
}

.range1::-webkit-slider-thumb {
  position: relative;
  height: 1.5rem /* 24px */;
  width: 1.5rem /* 24px */;
  border-radius: var(--rounded-box, 1rem /* 16px */);
  border-style: none;
  --tw-bg-opacity: 1;
  /* background-color: var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity))); */
  appearance: none;
  -webkit-appearance: none;
  top: 50%;
  /* color: var(--range-shdw); */
  transform: translateY(-50%);
  --filler-size: 100rem /* 1600px */;
  --filler-offset: 0.6rem /* 9.6px */;
  box-shadow: 0 0 0 0px var(--range-shdw) inset, var(--focus-shadow, 0 0),
    calc(var(--filler-size) * -1 - var(--filler-offset)) 0 0 var(--filler-size);
}
